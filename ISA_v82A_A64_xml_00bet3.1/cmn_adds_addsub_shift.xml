
<instructionsection id="CMN_ADDS_addsub_shift" title="CMN (shifted register) -- A64" type="alias">
  <docvars>
    <docvar key="alias_mnemonic" value="CMN" />
    <docvar key="cond-setting" value="S" />
    <docvar key="instr-class" value="general" />
    <docvar key="isa" value="A64" />
    <docvar key="mnemonic" value="ADDS" />
  </docvars>
  <heading>CMN (shifted register)</heading>
  <desc>
    <brief>
      <para>Compare Negative (shifted register)</para>
    </brief>
    <authored>
      <para>Compare Negative (shifted register) adds a register value and an optionally-shifted register value. It updates the condition flags based on the result, and discards the result.</para>
    </authored>
  </desc>
  <aliasto refiform="adds_addsub_shift.xml" iformid="ADDS_addsub_shift">ADDS (shifted register)</aliasto>
  <classes>
    <iclass name="Setting the condition flags" oneof="1" id="s" no_encodings="2" isa="A64">
      <docvars>
        <docvar key="cond-setting" value="S" />
        <docvar key="instr-class" value="general" />
        <docvar key="isa" value="A64" />
        <docvar key="mnemonic" value="ADDS" />
      </docvars>
      <iclassintro count="2"></iclassintro>
      <regdiagram form="32" psname="aarch64/instrs/integer/arithmetic/add-sub/shiftedreg" tworows="1">
        <box hibit="31" name="sf" usename="1">
          <c></c>
        </box>
        <box hibit="30" name="op" usename="1" settings="1" psbits="x">
          <c>0</c>
        </box>
        <box hibit="29" name="S" usename="1" settings="1" psbits="x">
          <c>1</c>
        </box>
        <box hibit="28" width="5" settings="5">
          <c>0</c>
          <c>1</c>
          <c>0</c>
          <c>1</c>
          <c>1</c>
        </box>
        <box hibit="23" width="2" name="shift" usename="1">
          <c colspan="2"></c>
        </box>
        <box hibit="21" settings="1">
          <c>0</c>
        </box>
        <box hibit="20" width="5" name="Rm" usename="1">
          <c colspan="5"></c>
        </box>
        <box hibit="15" width="6" name="imm6" usename="1">
          <c colspan="6"></c>
        </box>
        <box hibit="9" width="5" name="Rn" usename="1">
          <c colspan="5"></c>
        </box>
        <box hibit="4" width="5" name="Rd" usename="1" settings="5" psbits="xxxxx">
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
          <c>1</c>
        </box>
      </regdiagram>
      <encoding name="CMN_ADDS_32_addsub_shift" oneofinclass="2" oneof="2" label="32-bit" bitdiffs="sf == 0">
        <docvars>
          <docvar key="alias_mnemonic" value="CMN" />
          <docvar key="cond-setting" value="S" />
          <docvar key="datatype" value="32" />
          <docvar key="instr-class" value="general" />
          <docvar key="isa" value="A64" />
          <docvar key="mnemonic" value="ADDS" />
        </docvars>
        <box hibit="31" width="1" name="sf">
          <c>0</c>
        </box>
        <asmtemplate><text>CMN  </text><a link="wn" hover="First 32-bit general-purpose source register (field &quot;Rn&quot;)">&lt;Wn&gt;</a><text>, </text><a link="wm" hover="Second 32-bit general-purpose source register (field &quot;Rm&quot;)">&lt;Wm&gt;</a><text>{</text><text>, </text><a link="shift" hover="Optional shift type applied to second source operand, default LSL (field &quot;shift&quot;) [ASR,LSL,LSR]">&lt;shift&gt;</a><text> #</text><a link="amount" hover="Shift amount [0-31], default 0 (field &quot;imm6&quot;)">&lt;amount&gt;</a><text>}</text></asmtemplate>
        <equivalent_to>
          <asmtemplate><a href="adds_addsub_shift.xml#ADDS_32_addsub_shift">ADDS</a><text> WZR, </text><a link="wn" hover="First 32-bit general-purpose source register (field &quot;Rn&quot;)">&lt;Wn&gt;</a><text>, </text><a link="wm" hover="Second 32-bit general-purpose source register (field &quot;Rm&quot;)">&lt;Wm&gt;</a><text> </text><text>{</text><text>, </text><a link="shift" hover="Optional shift type applied to second source operand, default LSL (field &quot;shift&quot;) [ASR,LSL,LSR]">&lt;shift&gt;</a><text> #</text><a link="amount" hover="Shift amount [0-31], default 0 (field &quot;imm6&quot;)">&lt;amount&gt;</a><text>}</text></asmtemplate>
          <aliascond>Unconditionally</aliascond>
        </equivalent_to>
      </encoding>
      <encoding name="CMN_ADDS_64_addsub_shift" oneofinclass="2" oneof="2" label="64-bit" bitdiffs="sf == 1">
        <docvars>
          <docvar key="alias_mnemonic" value="CMN" />
          <docvar key="cond-setting" value="S" />
          <docvar key="datatype" value="64" />
          <docvar key="instr-class" value="general" />
          <docvar key="isa" value="A64" />
          <docvar key="mnemonic" value="ADDS" />
        </docvars>
        <box hibit="31" width="1" name="sf">
          <c>1</c>
        </box>
        <asmtemplate><text>CMN  </text><a link="xn" hover="First 64-bit general-purpose source register (field &quot;Rn&quot;)">&lt;Xn&gt;</a><text>, </text><a link="xm" hover="Second 64-bit general-purpose source register (field &quot;Rm&quot;)">&lt;Xm&gt;</a><text>{</text><text>, </text><a link="shift" hover="Optional shift type applied to second source operand, default LSL (field &quot;shift&quot;) [ASR,LSL,LSR]">&lt;shift&gt;</a><text> #</text><a link="amount_1" hover="Shift amount [0-63], default 0 (field &quot;imm6&quot;)">&lt;amount&gt;</a><text>}</text></asmtemplate>
        <equivalent_to>
          <asmtemplate><a href="adds_addsub_shift.xml#ADDS_64_addsub_shift">ADDS</a><text> XZR, </text><a link="xn" hover="First 64-bit general-purpose source register (field &quot;Rn&quot;)">&lt;Xn&gt;</a><text>, </text><a link="xm" hover="Second 64-bit general-purpose source register (field &quot;Rm&quot;)">&lt;Xm&gt;</a><text> </text><text>{</text><text>, </text><a link="shift" hover="Optional shift type applied to second source operand, default LSL (field &quot;shift&quot;) [ASR,LSL,LSR]">&lt;shift&gt;</a><text> #</text><a link="amount_1" hover="Shift amount [0-63], default 0 (field &quot;imm6&quot;)">&lt;amount&gt;</a><text>}</text></asmtemplate>
          <aliascond>Unconditionally</aliascond>
        </equivalent_to>
      </encoding>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="CMN_ADDS_32_addsub_shift" symboldefcount="1">
      <symbol link="wn">&lt;Wn&gt;</symbol>
      <account encodedin="Rn">
        <intro>
          <para>Is the 32-bit name of the first general-purpose source register, encoded in the "Rn" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="CMN_ADDS_32_addsub_shift" symboldefcount="1">
      <symbol link="wm">&lt;Wm&gt;</symbol>
      <account encodedin="Rm">
        <intro>
          <para>Is the 32-bit name of the second general-purpose source register, encoded in the "Rm" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="CMN_ADDS_64_addsub_shift" symboldefcount="1">
      <symbol link="xn">&lt;Xn&gt;</symbol>
      <account encodedin="Rn">
        <intro>
          <para>Is the 64-bit name of the first general-purpose source register, encoded in the "Rn" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="CMN_ADDS_64_addsub_shift" symboldefcount="1">
      <symbol link="xm">&lt;Xm&gt;</symbol>
      <account encodedin="Rm">
        <intro>
          <para>Is the 64-bit name of the second general-purpose source register, encoded in the "Rm" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="CMN_ADDS_32_addsub_shift, CMN_ADDS_64_addsub_shift" symboldefcount="1">
      <symbol link="shift">&lt;shift&gt;</symbol>
      <definition encodedin="shift">
        <intro>Is the optional shift type to be applied to the second source operand, defaulting to LSL and </intro>
        <table class="valuetable">
          <tgroup cols="2">
            <thead>
              <row>
                <entry class="bitfield">shift</entry>
                <entry class="symbol">&lt;shift&gt;</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry class="bitfield">00</entry>
                <entry class="symbol">LSL</entry>
              </row>
              <row>
                <entry class="bitfield">01</entry>
                <entry class="symbol">LSR</entry>
              </row>
              <row>
                <entry class="bitfield">10</entry>
                <entry class="symbol">ASR</entry>
              </row>
              <row>
                <entry class="bitfield">11</entry>
                <entry class="symbol">RESERVED</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </definition>
    </explanation>
    <explanation enclist="CMN_ADDS_32_addsub_shift" symboldefcount="1">
      <symbol link="amount">&lt;amount&gt;</symbol>
      <account encodedin="imm6">
        <docvars>
          <docvar key="datatype" value="32" />
        </docvars>
        <intro>
          <para>For the 32-bit variant: is the shift amount, in the range 0 to 31, defaulting to 0 and encoded in the "imm6" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="CMN_ADDS_64_addsub_shift" symboldefcount="2">
      <symbol link="amount_1">&lt;amount&gt;</symbol>
      <account encodedin="imm6">
        <docvars>
          <docvar key="datatype" value="64" />
        </docvars>
        <intro>
          <para>For the 64-bit variant: is the shift amount, in the range 0 to 63, defaulting to 0 and encoded in the "imm6" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
</instructionsection>
anation>
    <explanation enclist="CMN_ADDS_64_addsub_shift" symboldefcount="2">
      <symbol link="amount_1">&lt;amount&gt;</symbol>
      <account encodedin="imm6">
        <docvars>
          <docvar key="datatype" value="64" />
        </docvars>
        <intro>
          <para>For the 64-bit variant: is the shift amount, in the range 0 to 63, defaulting to 0 and encoded in the "imm6" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
</instructionsection>
