<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2017 ARM Limited or its affiliates. All rights reserved. -->
<!-- This document is Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by ARM and the party that ARM delivered this document to. -->

<instructionsection id="SBFX_SBFM" title="SBFX -- A64" type="alias">
  <docvars>
    <docvar key="alias_mnemonic" value="SBFX" />
    <docvar key="bitfield-fill" value="signed-fill" />
    <docvar key="instr-class" value="general" />
    <docvar key="isa" value="A64" />
    <docvar key="mnemonic" value="SBFM" />
    <docvar key="source-type" value="src-is-immediate" />
  </docvars>
  <heading>SBFX</heading>
  <desc>
    <brief>
      <para>Signed Bitfield Extract</para>
    </brief>
    <authored>
      <para>Signed Bitfield Extract extracts any number of adjacent bits at any position from a register, sign-extends them to the size of the register, and writes the result to the destination register.</para>
    </authored>
  </desc>
  <aliasto refiform="sbfm.xml" iformid="SBFM">SBFM</aliasto>
  <classes>
    <iclass name="With sign replication to left and zeros to right" oneof="1" id="signed_fill" no_encodings="2" isa="A64">
      <docvars>
        <docvar key="bitfield-fill" value="signed-fill" />
        <docvar key="instr-class" value="general" />
        <docvar key="isa" value="A64" />
        <docvar key="mnemonic" value="SBFM" />
      </docvars>
      <iclassintro count="2"></iclassintro>
      <regdiagram form="32" psname="aarch64/instrs/integer/bitfield/SBFM_32M_bitfield/SBFX_SBFM_32M_bitfield" tworows="1">
        <box hibit="31" name="sf" usename="1">
          <c></c>
        </box>
        <box hibit="30" width="2" name="opc" usename="1" settings="2" psbits="xx">
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="28" width="6" settings="6">
          <c>1</c>
          <c>0</c>
          <c>0</c>
          <c>1</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="22" name="N" usename="1">
          <c></c>
        </box>
        <box hibit="21" width="6" name="immr" usename="1">
          <c colspan="6"></c>
        </box>
        <box hibit="15" width="6" name="imms" usename="1">
          <c colspan="6"></c>
        </box>
        <box hibit="9" width="5" name="Rn" usename="1">
          <c colspan="5"></c>
        </box>
        <box hibit="4" width="5" name="Rd" usename="1">
          <c colspan="5"></c>
        </box>
      </regdiagram>
      <encoding name="SBFX_SBFM_32M_bitfield" oneofinclass="2" oneof="2" label="32-bit" bitdiffs="sf == 0 &amp;&amp; N == 0">
        <docvars>
          <docvar key="alias_mnemonic" value="SBFX" />
          <docvar key="bitfield-fill" value="signed-fill" />
          <docvar key="datatype" value="32" />
          <docvar key="instr-class" value="general" />
          <docvar key="isa" value="A64" />
          <docvar key="mnemonic" value="SBFM" />
          <docvar key="source-type" value="src-is-immediate" />
        </docvars>
        <box hibit="31" width="1" name="sf">
          <c>0</c>
        </box>
        <box hibit="22" width="1" name="N">
          <c>0</c>
        </box>
        <asmtemplate><text>SBFX  </text><a link="wd" hover="32-bit general-purpose destination register (field &quot;Rd&quot;)">&lt;Wd&gt;</a><text>, </text><a link="wn" hover="32-bit general-purpose source register (field &quot;Rn&quot;)">&lt;Wn&gt;</a><text>, #</text><a link="lsb_1" hover="Bit number of lsb of the source bitfield [0-31]">&lt;lsb&gt;</a><text>, #</text><a link="width" hover="Width of bitfield [1-32-&lt;lsb&gt;]">&lt;width&gt;</a></asmtemplate>
        <equivalent_to>
          <asmtemplate><a href="sbfm.xml#SBFM_32M_bitfield">SBFM</a><text> </text><a link="wd" hover="32-bit general-purpose destination register (field &quot;Rd&quot;)">&lt;Wd&gt;</a><text>, </text><a link="wn" hover="32-bit general-purpose source register (field &quot;Rn&quot;)">&lt;Wn&gt;</a><text>, #</text><a link="lsb_1" hover="Bit number of lsb of the source bitfield [0-31]">&lt;lsb&gt;</a><text>, #(</text><a link="lsb_1" hover="Bit number of lsb of the source bitfield [0-31]">&lt;lsb&gt;</a><text>+</text><a link="width" hover="Width of bitfield [1-32-&lt;lsb&gt;]">&lt;width&gt;</a><text>-1)</text></asmtemplate>
          <aliascond><a link="impl-aarch64.BFXPreferred.4" file="shared_pseudocode.xml" hover="function: boolean BFXPreferred(bit sf, bit uns, bits(6) imms, bits(6) immr)">BFXPreferred</a>(sf, opc&lt;1&gt;, imms, immr)</aliascond>
        </equivalent_to>
      </encoding>
      <encoding name="SBFX_SBFM_64M_bitfield" oneofinclass="2" oneof="2" label="64-bit" bitdiffs="sf == 1 &amp;&amp; N == 1">
        <docvars>
          <docvar key="alias_mnemonic" value="SBFX" />
          <docvar key="bitfield-fill" value="signed-fill" />
          <docvar key="datatype" value="64" />
          <docvar key="instr-class" value="general" />
          <docvar key="isa" value="A64" />
          <docvar key="mnemonic" value="SBFM" />
          <docvar key="source-type" value="src-is-immediate" />
        </docvars>
        <box hibit="31" width="1" name="sf">
          <c>1</c>
        </box>
        <box hibit="22" width="1" name="N">
          <c>1</c>
        </box>
        <asmtemplate><text>SBFX  </text><a link="xd" hover="64-bit general-purpose destination register (field &quot;Rd&quot;)">&lt;Xd&gt;</a><text>, </text><a link="xn" hover="64-bit general-purpose source register (field &quot;Rn&quot;)">&lt;Xn&gt;</a><text>, #</text><a link="lsb_3" hover="Bit number of lsb of the source bitfield [0-63]">&lt;lsb&gt;</a><text>, #</text><a link="width_1" hover="Width of bitfield [1-64-&lt;lsb&gt;]">&lt;width&gt;</a></asmtemplate>
        <equivalent_to>
          <asmtemplate><a href="sbfm.xml#SBFM_64M_bitfield">SBFM</a><text> </text><a link="xd" hover="64-bit general-purpose destination register (field &quot;Rd&quot;)">&lt;Xd&gt;</a><text>, </text><a link="xn" hover="64-bit general-purpose source register (field &quot;Rn&quot;)">&lt;Xn&gt;</a><text>, #</text><a link="lsb_3" hover="Bit number of lsb of the source bitfield [0-63]">&lt;lsb&gt;</a><text>, #(</text><a link="lsb_3" hover="Bit number of lsb of the source bitfield [0-63]">&lt;lsb&gt;</a><text>+</text><a link="width_1" hover="Width of bitfield [1-64-&lt;lsb&gt;]">&lt;width&gt;</a><text>-1)</text></asmtemplate>
          <aliascond><a link="impl-aarch64.BFXPreferred.4" file="shared_pseudocode.xml" hover="function: boolean BFXPreferred(bit sf, bit uns, bits(6) imms, bits(6) immr)">BFXPreferred</a>(sf, opc&lt;1&gt;, imms, immr)</aliascond>
        </equivalent_to>
      </encoding>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="SBFX_SBFM_32M_bitfield" symboldefcount="1">
      <symbol link="wd">&lt;Wd&gt;</symbol>
      <account encodedin="Rd">
        <intro>
          <para>Is the 32-bit name of the general-purpose destination register, encoded in the "Rd" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="SBFX_SBFM_32M_bitfield" symboldefcount="1">
      <symbol link="wn">&lt;Wn&gt;</symbol>
      <account encodedin="Rn">
        <intro>
          <para>Is the 32-bit name of the general-purpose source register, encoded in the "Rn" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="SBFX_SBFM_64M_bitfield" symboldefcount="1">
      <symbol link="xd">&lt;Xd&gt;</symbol>
      <account encodedin="Rd">
        <intro>
          <para>Is the 64-bit name of the general-purpose destination register, encoded in the "Rd" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="SBFX_SBFM_64M_bitfield" symboldefcount="1">
      <symbol link="xn">&lt;Xn&gt;</symbol>
      <account encodedin="Rn">
        <intro>
          <para>Is the 64-bit name of the general-purpose source register, encoded in the "Rn" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="SBFX_SBFM_32M_bitfield" symboldefcount="1">
      <symbol link="lsb_1">&lt;lsb&gt;</symbol>
      <account encodedin="">
        <docvars>
          <docvar key="datatype" value="32" />
        </docvars>
        <intro>
          <para>For the 32-bit variant: is the bit number of the lsb of the source bitfield, in the range 0 to 31.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="SBFX_SBFM_64M_bitfield" symboldefcount="2">
      <symbol link="lsb_3">&lt;lsb&gt;</symbol>
      <account encodedin="">
        <docvars>
          <docvar key="datatype" value="64" />
        </docvars>
        <intro>
          <para>For the 64-bit variant: is the bit number of the lsb of the source bitfield, in the range 0 to 63.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="SBFX_SBFM_32M_bitfield" symboldefcount="1">
      <symbol link="width">&lt;width&gt;</symbol>
      <account encodedin="">
        <docvars>
          <docvar key="datatype" value="32" />
        </docvars>
        <intro>
          <para>For the 32-bit variant: is the width of the bitfield, in the range 1 to 32-&lt;lsb&gt;.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="SBFX_SBFM_64M_bitfield" symboldefcount="2">
      <symbol link="width_1">&lt;width&gt;</symbol>
      <account encodedin="">
        <docvars>
          <docvar key="datatype" value="64" />
        </docvars>
        <intro>
          <para>For the 64-bit variant: is the width of the bitfield, in the range 1 to 64-&lt;lsb&gt;.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
</instructionsection>
